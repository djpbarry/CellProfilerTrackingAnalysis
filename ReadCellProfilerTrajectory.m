function MyExptNuclei = importfile(filename, startRow, endRow)
%IMPORTFILE Import numeric data from a text file as a matrix.
%   MYEXPTNUCLEI = IMPORTFILE(FILENAME) Reads data from text file FILENAME
%   for the default selection.
%
%   MYEXPTNUCLEI = IMPORTFILE(FILENAME, STARTROW, ENDROW) Reads data from
%   rows STARTROW through ENDROW of text file FILENAME.
%
% Example:
%   MyExptNuclei = importfile('MyExpt_Nuclei.csv', 2, 18332);
%
%    See also TEXTSCAN.

% Auto-generated by MATLAB on 2019/05/23 11:18:18

%% Initialize variables.
delimiter = ',';
if nargin<=2
    startRow = 2;
    endRow = inf;
end

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
%	column8: double (%f)
%   column9: double (%f)
%	column10: double (%f)
%   column11: double (%f)
%	column12: double (%f)
%   column13: double (%f)
%	column14: double (%f)
%   column15: double (%f)
%	column16: double (%f)
%   column17: double (%f)
%	column18: double (%f)
%   column19: double (%f)
%	column20: double (%f)
%   column21: double (%f)
%	column22: double (%f)
%   column23: double (%f)
%	column24: double (%f)
%   column25: double (%f)
%	column26: double (%f)
%   column27: double (%f)
%	column28: double (%f)
%   column29: double (%f)
%	column30: double (%f)
%   column31: categorical (%C)
%	column32: double (%f)
%   column33: double (%f)
%	column34: double (%f)
%   column35: text (%q)
%	column36: double (%f)
%   column37: double (%f)
%	column38: double (%f)
%   column39: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%C%f%f%f%q%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'TextType', 'string', 'EmptyValue', NaN, 'HeaderLines' ,startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Create output variable
MyExptNuclei = table(dataArray{1:end-1}, 'VariableNames', {'ImageNumber','ObjectNumber','Children_Cells_Count','Intensity_IntegratedIntensityEdge_GFP','Intensity_IntegratedIntensity_GFP','Intensity_LowerQuartileIntensity_GFP','Intensity_MADIntensity_GFP','Intensity_MassDisplacement_GFP','Intensity_MaxIntensityEdge_GFP','Intensity_MaxIntensity_GFP','Intensity_MeanIntensityEdge_GFP','Intensity_MeanIntensity_GFP','Intensity_MedianIntensity_GFP','Intensity_MinIntensityEdge_GFP','Intensity_MinIntensity_GFP','Intensity_StdIntensityEdge_GFP','Intensity_StdIntensity_GFP','Intensity_UpperQuartileIntensity_GFP','Location_CenterMassIntensity_X_GFP','Location_CenterMassIntensity_Y_GFP','Location_CenterMassIntensity_Z_GFP','Location_Center_X','Location_Center_Y','Location_Center_Z','Location_MaxIntensity_X_GFP','Location_MaxIntensity_Y_GFP','Location_MaxIntensity_Z_GFP','Number_Object_Number','TrackObjects_Displacement_50','TrackObjects_DistanceTraveled_50','TrackObjects_FinalAge_50','TrackObjects_IntegratedDistance_50','TrackObjects_Label_50','TrackObjects_Lifetime_50','TrackObjects_Linearity_50','TrackObjects_ParentImageNumber_50','TrackObjects_ParentObjectNumber_50','TrackObjects_TrajectoryX_50','TrackObjects_TrajectoryY_50'});

